version: "3.7"

services:
  # https://hub.docker.com/_/nextcloud
  nextcloud:
    build: .
    restart: unless-stopped
    container_name: nextcloud
    hostname: nextcloud
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    depends_on:
      - db
      - redis
      - documentserver
    volumes:
      - ${DATA}/nextcloud-main:/var/www/html
      - ${DATA}/nextcloud-apps:/var/www/html/custom_apps
      - ${DATA}/nextcloud-config:/var/www/html/config
      - ${DATA}/nextcloud-data:/var/www/html/data
    environment:
      NEXTCLOUD_TRUSTED_DOMAINS: "nextcloud.${DOMAIN_TLD}"
      REDIS_HOST: redis
      REDIS_HOST_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: nextcloud
      POSTGRES_USER: superUser
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST: "db:5432"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      # http
      - "traefik.http.routers.nextcloud.entrypoints=web"
      - "traefik.http.routers.nextcloud.rule=Host(`nextcloud.${DOMAIN_TLD}`)"
      - "traefik.http.middlewares.nextcloud-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.nextcloud.middlewares=nextcloud-https-redirect"
      # https
      - "traefik.http.routers.nextcloud-secure.entrypoints=web-secure"
      - "traefik.http.routers.nextcloud-secure.rule=Host(`nextcloud.${DOMAIN_TLD}`)"
      - "traefik.http.routers.nextcloud-secure.tls=true"
      - "traefik.http.routers.nextcloud-secure.tls.certresolver=letsencrypt"
      - "traefik.http.routers.nextcloud-secure.tls.domains[0].main=*.${DOMAIN_TLD}"
      - "traefik.http.routers.nextcloud-secure.tls.options=default"
      # middlewares
      - "traefik.http.routers.nextcloud-secure.middlewares=security-headers@file, nextcloud-redirect@file"
      # services
      - "traefik.http.routers.nextcloud-secure.service=nextcloud"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"

  # https://hub.docker.com/r/onlyoffice/documentserver
  documentserver:
    image: onlyoffice/documentserver
    restart: unless-stopped
    container_name: documentserver
    hostname: documentserver
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    depends_on:
      - db
    volumes:
      - ${DATA}/ds-logs:/var/log/onlyoffice
      - ${DATA}/ds-cache:/var/lib/onlyoffice
    environment:
      JWT_ENABLED: "true"
      JWT_SECRET: ${PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      # http
      - "traefik.http.routers.documentserver.entrypoints=web"
      - "traefik.http.routers.documentserver.rule=Host(`documentserver.${DOMAIN_TLD}`)"
      - "traefik.http.middlewares.documentserver-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.documentserver.middlewares=documentserver-https-redirect"
      # https
      - "traefik.http.routers.documentserver-secure.entrypoints=web-secure"
      - "traefik.http.routers.documentserver-secure.rule=Host(`documentserver.${DOMAIN_TLD}`)"
      - "traefik.http.routers.documentserver-secure.tls=true"
      - "traefik.http.routers.documentserver-secure.tls.certresolver=letsencrypt"
      - "traefik.http.routers.documentserver-secure.tls.domains[0].main=*.${DOMAIN_TLD}"
      - "traefik.http.routers.documentserver-secure.tls.options=default"
      # middlewares
      - "traefik.http.routers.documentserver-secure.middlewares=security-headers@file"
      # services
      - "traefik.http.routers.documentserver-secure.service=documentserver"
      - "traefik.http.services.documentserver.loadbalancer.server.port=80"

  # https://hub.docker.com/_/postgres
  db:
    image: postgres:12.2
    restart: unless-stopped
    container_name: db
    hostname: db
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    volumes:
      - ${DATA}/db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: superUser
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  # https://hub.docker.com/_/redis
  redis:
    image: redis:5.0.7
    restart: unless-stopped
    container_name: redis
    hostname: redis
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    volumes:
      - ${DATA}/redis-db:/bitnami/redis/data
      - ${DATA}/redis-config:/opt/bitnami/redis/etc/redis.conf
    environment:
      REDIS_PASSWORD: ${DB_PASSWORD}

networks:
  proxy:
    external: true